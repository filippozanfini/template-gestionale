import React, { useEffect, useState } from 'react'
import Button from '../components/Button'
import Head from 'next/head'
import useUser from '../lib/useUser'
import logo from '../app/logo-negativo.png'
import Image from 'next/image'
import {
  CameraIcon,
  ChevronDoubleLeftIcon,
  ChevronDownIcon,
  ColorSwatchIcon,
  DocumentAddIcon,
  DocumentIcon,
  DownloadIcon,
  LibraryIcon,
  LocationMarkerIcon,
  MapIcon,
  NewspaperIcon,
  OfficeBuildingIcon,
  PencilIcon,
  PhotographIcon,
  StarIcon,
  TagIcon,
  TicketIcon,
  UsersIcon,
  ViewListIcon,
} from '@heroicons/react/outline'
import NavigationMenu, { MenuItem } from '../components/NavigationMenu'



function SidebarLayout({ children }: any) {
  const [sidebar, setSidebar] = useState(true)
  const { user } = useUser({ redirectTo: '/login' })
  const [ current, setCurrent ] = useState(-1);
  const [ sezioni, setSezioni ] = useState<MenuItem[]>([]);

  useEffect( () => {

    const menu = [
      { slug: 'download', label: 'Download', icon: <DownloadIcon />, open: false },
      { slug: 'event', label: 'Events', icon: <TicketIcon />, children: [], category: 10 },
      { slug: 'iat', label: 'Iat', icon: <OfficeBuildingIcon />, open: false },
      { slug: 'interessi', label: 'Interessi', icon: <StarIcon />, open: false },
      { slug: 'itinerary', label: 'Itinerari', icon: <LocationMarkerIcon />, open: false },
      { slug: 'localita', label: 'Localita', icon: <LibraryIcon /> , open: false},
      { slug: 'media', label: 'Media', icon: <PhotographIcon />, open: false },
      { slug: 'news', label: 'News', icon: <NewspaperIcon />, open: false },
      { slug: 'page', label: 'Page', icon: <DocumentIcon />, open: false },
      { slug: 'tag', label: 'Tag', icon: <TagIcon />, open: false },
      { slug: 'user', label: 'User', icon: <UsersIcon />, open: false },
      { slug: 'webcam', label: 'Webcam', icon: <CameraIcon />, open: false },
    ].filter( (item:any) => {
       return user?.canRead( item.slug );
    }).map( (item:any) => {
      let children = [ { slug: item.slug + '-list', label: 'Elenco', icon: <ViewListIcon /> }];
      if( user?.canWrite( item.slug ) ){
         children.push( { slug: item.slug + '-add', label: 'Nuovo', icon: <DocumentAddIcon /> })
      }
      if( item.category ){
        children.push({ slug: item.slug + '-category', label: 'Categorie', icon: <ColorSwatchIcon />} );
      }
      item.children = children;
      return item;
   });
    setSezioni( menu as MenuItem[]);
  }, [user])

  if (!user?.isLoggedIn()) {
    return <div>Loading...</div>
  }

  return (
    <>
      <Head key="main">
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className={
          ' flex flex-no-wrap'
        }>
        {/* Sidebar starts */}
        <div
          className={
            'overflow-y-scroll fixed t-0 l-0 text-white bg-indigo-800 shadow h-screen flex-col justify-start transition-all ease-in-out duration-500'
          }
          style={
            {
              width: sidebar ? '240px' : '70px'
            }
          }
        >
          <div className="p-2 text-center w-full">
            <Image
              className="w-full block-inline mx-auto"
              src={logo}
              layout="fixed"
              objectFit="contain"
              width={ sidebar ?  '84px' : '50px' }
              height={ sidebar ? '84px' : '50px' }
              alt="Logo"
            />
            {sidebar ?
            <p className={"text-center w-full text-sm" }>{user.fullname()}</p> : null }
            <hr className='mt-2'/>
          </div>
          <div>
            <NavigationMenu collapsed={!sidebar} className="mt-2 text-white bg-indigo-800" menu={sezioni} onClick={ (item:MenuItem) => { console.log( item ) } } />
          </div>
          <div className='absolute w-full bottom-0 right-0 left-0 text-center py-2 bg-black/40'>
             <button className='w-5 h-5 mx-auto' onClick={ () => setSidebar(!sidebar) }> <ChevronDoubleLeftIcon className={`${!sidebar ? 'transform rotate-180' : ''} duration-500 transition ease-in-out`} /> </button>
          </div>
      </div>
      {/* Sidebar ends */}
      {/* Remove class [ h-64 ] when adding a card block */}
      <div
      style={ sidebar ? { marginLeft: '240px' } : {marginLeft: '80px'} }
        className={
          'w-full h-full'
        }
      >
        <div className='container py-10 px-6 mx-auto'>
        <Button
          aria="Collassa la sidebar"
          title="hide"
          onClick={() => {
            setSidebar(!sidebar)
          }}
        />
        {/* Remove class [ border-dashed border-2 border-gray-300 ] to remove dotted border */}
        <div className=" rounded border-dashed border-2 border-gray-300">
          {children}
        </div>
        </div>
      </div>
      </div>
    </>
  )
}

export default SidebarLayout
